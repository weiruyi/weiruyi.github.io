import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a,b as t,o as p}from"./app-BNd_UKdk.js";const e={},o=t(`<h1 id="alioss" tabindex="-1"><a class="header-anchor" href="#alioss"><span>AliOSS</span></a></h1><h2 id="一、什么是oss" tabindex="-1"><a class="header-anchor" href="#一、什么是oss"><span>一、什么是OSS</span></a></h2><h3 id="_1、介绍" tabindex="-1"><a class="header-anchor" href="#_1、介绍"><span>1、介绍</span></a></h3><p>OSS的英文全称是Object Storage Service ，对象存储服务，是一种使用 HTTP API 存储和检索非结构化数据和元数据对象的工具。 可以理解成是一个资源托管的地方，这些资源，就是上面提到的对象。网站或者系统运营的过程中，可能会存储大量的图片、视频、音频这样的静态资源。如果是在服务器本机存储这些内容，维护成本高，不利于迁移，而且容灾效果不佳。为了解决这些问题，可以将这些静态资源托管到第三方服务中 ，而这个资源托管的服务就是对象存储服务。</p><p>如果只有存储功能，那么OSS服务就跟硬盘没啥区别了，OSS还要有外部访问的能力，这样才能把静态资源传上去（上行流量），别人才可以把这些静态资源下载下来（下行流量）。</p><p>总结来讲，<strong>OSS就是集存储与访问于一身的资源对象托管服务，用于存储静态资源，同时还提供备份、容灾等常见功能</strong>。</p><div class="hint-container tip"><p class="hint-container-title">注意点：</p><ul><li>对象，指的是非结构化的静态资源，如图片、音频、视频、日志文件等。</li><li>OSS提供的服务有存储、访问、备份、容灾等。</li><li>OSS一般指第三方云厂商提供的对象存储服务，当然也可以自己在本地机房搭建自己的对象存储，如使用Minio等搭建分布式文件存储服务，用作对象存储。</li></ul></div><h3 id="_2、oss中的相关术语" tabindex="-1"><a class="header-anchor" href="#_2、oss中的相关术语"><span>2、OSS中的相关术语</span></a></h3><p><strong>1.存储空间（Buket）</strong></p><p>存储空间是用于存储对象的容器，所有的对象都存储在某个存储空间中。</p><p><strong>2.对象/文件（Object）</strong></p><p>对象是OSS存储数据的基本单元，也被称为OSS的文件，对象由元信息（Object Meta）、用户数据（Data）和文件名（Key）组成。对象由存储空间内部唯一的key来标识。</p><p><strong>3.地域（Region）</strong></p><p>地域表示OSS的数据中心所在的物理位置，可以根据费用、请求来源等来选择数据存储的地域。</p><p><strong>4.访问域名（Endpoint）</strong></p><p>Endpoint表示对外提供服务的访问域名，OSS以 HTTP restful API 对外提供服务，当访问不同地域的时候，需要不同的域名。通过内网和外网访问同一个地域所需要的域名是不同的。</p><p><strong>5.访问密钥（AccessKey）</strong></p><p>简称AK，指的是访问身份验证中用到的AccessKeyId和AccessKeySecret。OSS通过使用AccessKeyId和AccessKeySecret对称加密的方法来验证某个请求发送者的身份。AccessKeyId用来标识用户，AccessKeySecret用于加密签名字符串和OSS用来验证签名字符串的密钥，AccessKeySecret必须保密。</p><h2 id="二、使用" tabindex="-1"><a class="header-anchor" href="#二、使用"><span>二、使用</span></a></h2><h3 id="_1、uuid" tabindex="-1"><a class="header-anchor" href="#_1、uuid"><span>1、UUID</span></a></h3><p><strong>1）介绍</strong></p><p>UUID全称：Universally Unique Identifier，即通用唯一识别码。</p><p>UUID是由一组32位数的16进制数字所构成，是故UUID理论上的总数为16^32 = 2^128，约等于3.4 x 10^38。也就是说若每纳秒产生1兆个UUID，要花100亿年才会将所有UUID用完。</p><p>UUID的标准型式包含32个16进制数字，以连字号分为五段，形式为8-4-4-4-12的32个字符，如：550e8400-e29b-41d4-a716-446655440000。</p><p><strong>UUID的作用：</strong></p><p>UUID的是让分布式系统中的所有元素都能有唯一的辨识信息，而不需要通过中央控制端来做辨识信息的指定。如此一来，每个人都可以创建不与其它人冲突的UUID。在这样的情况下，就不需考虑数据库创建时的名称重复问题。目前最广泛应用的UUID，是微软公司的全局唯一标识符（GUID），而其他重要的应用，则有Linux ext2/ext3文件系统、LUKS加密分区、GNOME、KDE、Mac OS X等等。</p><p><strong>UUID的组成：</strong></p><p>UUID是指在一台机器上生成的数字，它保证对在同一时空中的所有机器都是唯一的。通常平台会提供生成的API。按照开放软件基金会(OSF)制定的标准计算，用到了以太网卡地址、纳秒级时间、芯片ID码和许多可能的数字。</p><p><strong>UUID由以下几部分的组合</strong>：</p><p>当前日期和时间，UUID的第一个部分与时间有关，如果你在生成一个UUID之后，过几秒又生成一个UUID，则第一个部分不同，其余相同。</p><p><strong>2）使用</strong></p><p>使用UUID可以生成唯一文件名</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2、本地存储" tabindex="-1"><a class="header-anchor" href="#_2、本地存储"><span>2、本地存储</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/upload&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> age<span class="token punctuation">,</span> <span class="token class-name">MultipartFile</span> image<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;文件上传：{},{},{}&quot;</span><span class="token punctuation">,</span>username<span class="token punctuation">,</span> age<span class="token punctuation">,</span> image<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">//获取原始文件名</span>
        <span class="token class-name">String</span> originalFilename <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> originalFilename<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> extname <span class="token operator">=</span> originalFilename<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//构造唯一文件名  uuid 通用唯一识别码</span>
        <span class="token class-name">String</span> newFileName <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> extname<span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;新文件名：{}&quot;</span><span class="token punctuation">,</span>newFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 将接收到的文件存储到本地</span>
        image<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\hnu\\\\javaStudy\\\\最新版JavaWeb开发教程\\\\资料\\\\day11-SpringBootWeb案例\\\\资料\\\\03. 文件上传\\\\&quot;</span><span class="token operator">+</span>newFileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、阿里云oss" tabindex="-1"><a class="header-anchor" href="#_3、阿里云oss"><span>3、阿里云OSS</span></a></h3><p><strong>1）依赖</strong></p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.aliyun.oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>aliyun-sdk-oss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.15.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2）配置文件</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;aliyun.oss&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AliOSSProperties</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> endpoint<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> accessKeyId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> accessKeySecret<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> bucketName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3）工具类</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AliOSSUtils</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">AliOSSProperties</span> aliOSSProperties<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 实现上传图片到OSS
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> file<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

        <span class="token class-name">String</span> endpoint <span class="token operator">=</span> aliOSSProperties<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> accessKeyId <span class="token operator">=</span> aliOSSProperties<span class="token punctuation">.</span><span class="token function">getAccessKeyId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> accessKeySecret <span class="token operator">=</span> aliOSSProperties<span class="token punctuation">.</span><span class="token function">getAccessKeySecret</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> bucketName <span class="token operator">=</span> aliOSSProperties<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 获取上传的文件的输入流</span>
        <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 避免文件覆盖</span>
        <span class="token class-name">String</span> originalFilename <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> fileName <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> originalFilename<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>originalFilename<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//上传文件到 OSS</span>
        <span class="token class-name">OSS</span> ossClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OSSClientBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>endpoint<span class="token punctuation">,</span> accessKeyId<span class="token punctuation">,</span> accessKeySecret<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ossClient<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">,</span> fileName<span class="token punctuation">,</span> inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//文件访问路径</span>
        <span class="token class-name">String</span> url <span class="token operator">=</span> endpoint<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;//&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;//&quot;</span> <span class="token operator">+</span> bucketName <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> endpoint<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;//&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> fileName<span class="token punctuation">;</span>
        <span class="token comment">// 关闭ossClient</span>
        ossClient<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> url<span class="token punctuation">;</span><span class="token comment">// 把上传到oss的路径返回</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4）使用示例</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/upload&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">upload</span><span class="token punctuation">(</span> <span class="token class-name">MultipartFile</span> image<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;文件上传：{}&quot;</span><span class="token punctuation">,</span> image<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//阿里云OSS工具类上传</span>
        <span class="token class-name">String</span> url <span class="token operator">=</span> aliOSSUtils<span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;文件上传完成，文件访问的url：{}&quot;</span><span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h1><p>[1] <a href="https://blog.csdn.net/tianjiliuhen/article/details/126954490" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/tianjiliuhen/article/details/126954490</a></p>`,46);function c(i,l){return p(),s("div",null,[a("more-"),o])}const k=n(e,[["render",c],["__file","AliOSS.html.vue"]]),d=JSON.parse('{"path":"/posts/%E5%B7%A5%E5%85%B7/AliOSS.html","title":"AliOSS","lang":"zh-CN","frontmatter":{"title":"AliOSS","date":"2024-05-22T16:24:22.000Z","tags":"code","category":"工具","description":"aliOSS上传文件操作","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E5%B7%A5%E5%85%B7/AliOSS.html"}],["meta",{"property":"og:site_name","content":"Lance"}],["meta",{"property":"og:title","content":"AliOSS"}],["meta",{"property":"og:description","content":"aliOSS上传文件操作"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-29T06:46:15.000Z"}],["meta",{"property":"article:author","content":"RuyiWei"}],["meta",{"property":"article:published_time","content":"2024-05-22T16:24:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-29T06:46:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AliOSS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-22T16:24:22.000Z\\",\\"dateModified\\":\\"2024-06-29T06:46:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"RuyiWei\\"}]}"]]},"headers":[{"level":2,"title":"一、什么是OSS","slug":"一、什么是oss","link":"#一、什么是oss","children":[{"level":3,"title":"1、介绍","slug":"_1、介绍","link":"#_1、介绍","children":[]},{"level":3,"title":"2、OSS中的相关术语","slug":"_2、oss中的相关术语","link":"#_2、oss中的相关术语","children":[]}]},{"level":2,"title":"二、使用","slug":"二、使用","link":"#二、使用","children":[{"level":3,"title":"1、UUID","slug":"_1、uuid","link":"#_1、uuid","children":[]},{"level":3,"title":"2、本地存储","slug":"_2、本地存储","link":"#_2、本地存储","children":[]},{"level":3,"title":"3、阿里云OSS","slug":"_3、阿里云oss","link":"#_3、阿里云oss","children":[]}]}],"git":{"createdTime":1719643575000,"updatedTime":1719643575000,"contributors":[{"name":"weiruyi","email":"1581778251@qq.com","commits":1}]},"readingTime":{"minutes":5.16,"words":1548},"filePathRelative":"posts/工具/AliOSS.md","localizedDate":"2024年5月22日","excerpt":"<!--more--->\\n<h1>AliOSS</h1>\\n<h2>一、什么是OSS</h2>\\n<h3>1、介绍</h3>\\n<p>OSS的英文全称是Object Storage Service ，对象存储服务，是一种使用 HTTP API 存储和检索非结构化数据和元数据对象的工具。\\n可以理解成是一个资源托管的地方，这些资源，就是上面提到的对象。网站或者系统运营的过程中，可能会存储大量的图片、视频、音频这样的静态资源。如果是在服务器本机存储这些内容，维护成本高，不利于迁移，而且容灾效果不佳。为了解决这些问题，可以将这些静态资源托管到第三方服务中 ，而这个资源托管的服务就是对象存储服务。</p>\\n<p>如果只有存储功能，那么OSS服务就跟硬盘没啥区别了，OSS还要有外部访问的能力，这样才能把静态资源传上去（上行流量），别人才可以把这些静态资源下载下来（下行流量）。</p>"}');export{k as comp,d as data};
