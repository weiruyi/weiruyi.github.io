import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as i,e as o,b as l,o as c}from"./app-Df1eO15o.js";const a={},n=o("h1",{id:"golang",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#golang"},[o("span",null,"GoLang")])],-1),p=o("p",null,"Go是一门编译型的和静态的编程语言。 Go诞生于谷歌研究院。 Go的核心设计成员中包括很多有着数十年编程语言研究领域经验的研究者。",-1),r=l('<p>Go有很多特性，有一些是独特的，有一些借鉴于一些其它编程语言：</p><ul><li>内置并发编程支持： <ul><li>使用协程（goroutine）做为基本的计算单元。轻松地创建协程。</li><li>使用通道（channel）来实现协程间的同步和通信。</li></ul></li><li>内置了映射（map）和切片（slice）类型。</li><li>支持多态（polymorphism）。</li><li>使用接口（interface）来实现裝盒（value boxing）和反射（reflection）。</li><li>支持指针。</li><li>支持函数闭包（closure）。</li><li>支持方法。</li><li>支持延迟函数调用（defer）。</li><li>支持类型内嵌（type embedding）。</li><li>支持类型推断（type deduction or type inference）。</li><li>内存安全。</li><li>自动垃圾回收。</li><li>良好的代码跨平台性。</li><li>自定义泛型（从Go 1.18开始）。</li></ul><p>除了以上特性，Go还有如下亮点：</p><ul><li>Go的语法很简洁并且和其它流行语言相似。 这使得具有一定编程经验的程序员很容易上手Go编程。 当然，对于没有编程经验的初学者，Go也比很多其它流行编程语言更容易上手一些。</li><li>Go拥有一个比较齐全的标准库。这个标准库提供了很多常用的功能。</li><li>Go拥有一个活跃和回应快速的社区。 社区贡献了<a href="https://github.com/avelino/awesome-go" target="_blank" rel="noopener noreferrer">大量高质量的第三方库包和应用</a>。</li></ul><p>Go程序员常常被称为地鼠（gopher）。</p><p>上面已经提到，Go属于编译型的静态语言。但是Go的很多特性使得用Go编程像使用动态脚本语言一样的灵活。 一般很难将静态语言的严格性和动态语言灵活性的优点合二为一。但是Go做到了这一点。 当然，合二为一也会不可避免地带来一些弊端。 但是，对于Go来说，合二为一带来的好处远多于合二为一的带来的弊端。</p><p>可读性是在Go语言的设计中一个非常重要的考虑因素。 一个Go程序员常常可以轻松读懂其他Go程序员写的代码。 甚至对于一个没有Go编程经验但具有其它语言编程经验的程序员来说，读懂一份Go源码也不是一件难事。</p><p>目前，使用最广泛的Go编译器由Go官方设计和开发团队维护。 以后我们将称此编译器为标准编译器。标准编译器也常常称为<code>gc</code>（是Go compiler的缩写，不是垃圾回收garbage collection的缩写）。 Go官方设计和开发团队也维护着另外一个编译器，<code>gccgo</code>。 <code>gccgo</code>是gcc编译器项目的一个子项目。 <code>gccgo</code>的使用广泛度大不如<code>gc</code>， 它的主要作用是做为一个参考，来保证<code>gc</code>的实现正确性。 目前两个编译器的开发都很活跃，尽管Go开发团队在<code>gc</code>的开发上花费的精力更多。</p><p><code>gc</code>编译器是Go官方工具链中一个组件。 Go官方工具链的使用将在下一篇文章中介绍。 Go官方工具链1.0发布于2012年三月。 Go语言规范的最新版本和Go官方工具链的最新版本总是保持一致。 每年Go官方工具链发行两个主版本。</p><p>自从Go语言正式发布后，Go的语法变化很小。 但是标准编译器<code>gc</code>却在不断地改进。 使用早期的<code>gc</code>编译的程序在运行的时候在每次垃圾回收的结尾常常会有明显的停顿。 但是自从Go 1.8，使用<code>gc</code>编译的程序在运行时刻已经基本消除了停顿现象。</p><p><code>gc</code>支持跨平台编译。 比如，我们可以在Linux平台上编译出Windows程序，反之亦然。</p><p>使用Go编写的程序常常编译得非常快。 编译时间的长短是开发愉悦度的一个重要因素。 编译时间短是很多程序员喜欢Go的一个原因。</p><p>Go程序生成的二进制可执行文件常常拥有以下优点：</p><ul><li>内存消耗少</li><li>执行速度快</li><li>启动快</li></ul><p>很多C家族语言，比如C/C++/Rust等，也拥有上述的优点。 但它们缺少Go语言的几个重要优点：</p><ul><li>程序编译时间短</li><li>像动态语言一样灵活</li><li>内置并发支持</li></ul><p>上面所有提到的优点使得Go成为一个出众的编程语言。 对于很多项目来说，Go是一个相当不错的选择。 目前，Go主要用于网络开发、系统工具开发、数据库开发和区块链开发。 随着从Go 1.18开始支持自定义泛型，预期Go会在更多开发领域流行起来，比如图形界面、游戏、大数据和人工智能等。</p><p>最后，我们应该知道，没有一门语言是完美的。Go也一样。Go的设计中有很多折衷和各种权衡。Go 1确实有一些不足。 比如，目前Go不支持任意类型的不变量。这导致很多标准库中一些希望永不被更改的值目前被声明为变量。这是Go程序中的一个潜在安全隐患。</p>',18);function d(G,s){return c(),t("div",null,[n,p,i(" more "),r])}const u=e(a,[["render",d],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/posts/%E5%90%8E%E7%AB%AF/GoLang/","title":"GoLang","lang":"zh-CN","frontmatter":{"title":"GoLang","date":"2024-12-25T16:24:22.000Z","tags":"Go","category":"Go","icon":"/img/golang.svg","order":1,"description":"Go是一门编译型的和静态的编程语言。 Go诞生于谷歌研究院。 Go的核心设计成员中包括很多有着数十年编程语言研究领域经验的研究者。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E5%90%8E%E7%AB%AF/GoLang/"}],["meta",{"property":"og:site_name","content":"Lance"}],["meta",{"property":"og:title","content":"GoLang"}],["meta",{"property":"og:description","content":"Go是一门编译型的和静态的编程语言。 Go诞生于谷歌研究院。 Go的核心设计成员中包括很多有着数十年编程语言研究领域经验的研究者。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-25T08:23:14.000Z"}],["meta",{"property":"article:author","content":"RuyiWei"}],["meta",{"property":"article:published_time","content":"2024-12-25T16:24:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-25T08:23:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GoLang\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-25T16:24:22.000Z\\",\\"dateModified\\":\\"2024-12-25T08:23:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"RuyiWei\\"}]}"]]},"headers":[],"git":{"createdTime":1735114994000,"updatedTime":1735114994000,"contributors":[{"name":"weiruyi","email":"1581778251@qq.com","commits":1}]},"readingTime":{"minutes":4.67,"words":1401},"filePathRelative":"posts/后端/GoLang/README.md","localizedDate":"2024年12月25日","excerpt":"\\n<p>Go是一门编译型的和静态的编程语言。 Go诞生于谷歌研究院。 Go的核心设计成员中包括很多有着数十年编程语言研究领域经验的研究者。</p>\\n","autoDesc":true}');export{u as comp,h as data};
